{"version":3,"sources":["../../src/utils/logger.js"],"names":["fs","winston","require","logDir","path","join","__dirname","existsSync","mkdirSync","tsFormat","Date","toLocaleTimeString","logger","createLogger","transports","Console","timestamp","colorize","level","handleExceptions","filename","datePattern","prepend","Config","isProduction","exitOnError","info","warn","error"],"mappings":";;;;;;AAAA;;IAAYA,E;;AACZ;;;;AACA;;;;;;;;AAEA,MAAMC,UAAUC,QAAQ,SAAR,CAAhB;AACA,MAAMC,SAASC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,cAArB,CAAf;;AAEA;AACA,IAAI,CAACN,GAAGO,UAAH,CAAcJ,MAAd,CAAL,EAA4B;AACxBH,OAAGQ,SAAH,CAAaL,MAAb;AACH;;AAED,MAAMM,WAAW,MAAO,IAAIC,IAAJ,EAAD,CAAaC,kBAAb,EAAvB;;AAEA,MAAMC,SAASX,QAAQY,YAAR,CAAqB;AAChCC,gBAAY;;AAER;AACA,QAAKb,QAAQa,UAAR,CAAmBC,OAAxB,CAAiC;AAC7BC,mBAAWP,QADkB;AAE7BQ,kBAAU,IAFmB;AAG7BC,eAAO,MAHsB;AAI7BC,0BAAkB;AAJW,KAAjC,CAHQ,EAUR,KAAKjB,QAAQ,2BAAR,CAAL,EAA2C;AACvCkB,kBAAW,GAAEjB,MAAO,OADmB;AAEvCa,mBAAWP,QAF4B;AAGvCY,qBAAa,YAH0B;AAIvCC,iBAAS,IAJ8B;AAKvCJ,eAAOK,iBAAOC,YAAP,GAAuB,MAAvB,GAA+B,SALC;AAMvCL,0BAAkB,IANqB;AAOvCF,kBAAU;AAP6B,KAA3C,CAVQ,CADoB;AAuBhCQ,iBAAa;AAvBmB,CAArB,CAAf;;AA4BAb,OAAOc,IAAP,CAAY,iBAAZ;AACAd,OAAOe,IAAP,CAAY,iBAAZ;AACAf,OAAOgB,KAAP,CAAa,YAAb;;kBAEehB,M","file":"logger.js","sourcesContent":["import * as fs from \"fs\";\r\nimport path from 'path';\r\nimport Config from './../config';\r\n\r\nconst winston = require('winston');\r\nconst logDir = path.join(__dirname, './../../logs');\r\n\r\n// Create the log directory if it does not exist\r\nif (!fs.existsSync(logDir)) {\r\n    fs.mkdirSync(logDir);\r\n}\r\n\r\nconst tsFormat = () => (new Date()).toLocaleTimeString();\r\n\r\nconst logger = winston.createLogger({\r\n    transports: [\r\n\r\n        // colorize the output to the console\r\n        new (winston.transports.Console)({\r\n            timestamp: tsFormat,\r\n            colorize: true,\r\n            level: 'info',\r\n            handleExceptions: true\r\n        }),\r\n\r\n        new (require('winston-daily-rotate-file'))({\r\n            filename: `${logDir}/.log`,\r\n            timestamp: tsFormat,\r\n            datePattern: 'dd-MM-yyyy',\r\n            prepend: true,\r\n            level: Config.isProduction ?  'info': 'verbose',\r\n            handleExceptions: true,\r\n            colorize: false\r\n        }),\r\n\r\n        //loggingWinston\r\n    ],\r\n    exitOnError: false\r\n});\r\n\r\n\r\n\r\nlogger.info('Success message');\r\nlogger.warn('Warning message');\r\nlogger.error('Error info');\r\n\r\nexport default logger;"]}