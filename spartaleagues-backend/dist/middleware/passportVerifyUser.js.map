{"version":3,"sources":["../../src/middleware/passportVerifyUser.js"],"names":["JwtStrategy","require","Strategy","ExtractJwt","config","module","exports","passport","interfaceDbModel_User","User","opts","jwtFromRequest","fromAuthHeaderWithScheme","secretOrKey","secret","use","jwt_payload","done","findById","_id","password","err","user"],"mappings":";;AAEA;;;;;;AAFA,MAAMA,cAAcC,QAAQ,cAAR,EAAwBC,QAA5C;AACA,MAAMC,aAAaF,QAAQ,cAAR,EAAwBE,UAA3C;;AAEA,MAAMC,SAASH,QAAQ,wBAAR,CAAf;;AAEAI,OAAOC,OAAP,GAAiB,UAASC,QAAT,EAAmB;;AAEhC,QAAIC,wBAAwBC,cAA5B;;AAEA,QAAIC,OAAO,EAAX;;AAEAA,SAAKC,cAAL,GAAsBR,WAAWS,wBAAX,CAAoC,KAApC,CAAtB;;AAEAF,SAAKG,WAAL,GAAmBT,OAAOU,MAA1B;;AAEAP,aAASQ,GAAT,CAAa,IAAIf,WAAJ,CAAgBU,IAAhB,EAAsB,CAACM,WAAD,EAAcC,IAAd,KAAuB;;AAEtDT,8BAAsBU,QAAtB,CAA+BF,YAAYG,GAA3C,EAAgD,EAACC,UAAU,CAAX,EAAhD,EAA+D,CAACC,GAAD,EAAMC,IAAN,KAAe;;AAE1E,gBAAGD,GAAH,EAAQ;AACJ,uBAAOJ,KAAKI,GAAL,EAAU,KAAV,CAAP;AACH;;AAED,gBAAGC,IAAH,EAAS;;AAEL,uBAAOL,KAAK,IAAL,EAAWK,IAAX,CAAP;AACH,aAHD,MAGO;;AAEH,uBAAOL,KAAK,IAAL,EAAW,KAAX,CAAP;AACH;AACJ,SAbD;AAcH,KAhBY,CAAb;AAiBH,CA3BD","file":"passportVerifyUser.js","sourcesContent":["const JwtStrategy = require('passport-jwt').Strategy;\r\nconst ExtractJwt = require('passport-jwt').ExtractJwt;\r\nimport User from './../mongoose/models/user';\r\nconst config = require('./../configDb/database');\r\n\r\nmodule.exports = function(passport) {\r\n\r\n    let interfaceDbModel_User = User;\r\n\r\n    let opts = {};\r\n\r\n    opts.jwtFromRequest = ExtractJwt.fromAuthHeaderWithScheme('jwt');\r\n\r\n    opts.secretOrKey = config.secret;\r\n\r\n    passport.use(new JwtStrategy(opts, (jwt_payload, done) => {\r\n\r\n        interfaceDbModel_User.findById(jwt_payload._id, {password: 0}, (err, user) => {\r\n\r\n            if(err) {\r\n                return done(err, false);\r\n            }\r\n\r\n            if(user) {\r\n\r\n                return done(null, user);\r\n            } else {\r\n\r\n                return done(null, false);\r\n            }\r\n        });\r\n    }));\r\n}\r\n"]}