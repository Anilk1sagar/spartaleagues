{"version":3,"sources":["../../src/initials/expressConfig.js"],"names":["configure","app","use","errorFormatter","param","msg","value","namespace","split","root","shift","formParam","length","bodyParser","json","urlencoded","extended","passport","initialize","session","require","global","util","express","static","path","join","__dirname","RouterConfig","initRoutes"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAGe;;AAEXA,eAAW,MAAOC,GAAP,IAAe;;AAGtB;AACIA,YAAIC,GAAJ,CAAQ,qBAAR;;AAEA;AACAD,YAAIC,GAAJ,CAAQ,gCAAiB;AACrBC,4BAAgB,CAACC,KAAD,EAAQC,GAAR,EAAaC,KAAb,KAAuB;AACnC,sBAAMC,YAAWH,MAAMI,KAAN,CAAY,GAAZ,CAAjB;AAAA,sBACEC,OAAOF,UAAUG,KAAV,EADT;AAAA,sBAEEC,YAAYF,IAFd;;AAIA,uBAAMF,UAAUK,MAAhB,EAAwB;AACpBD,iCAAa,MAAMJ,UAAUG,KAAV,EAAN,GAA0B,GAAvC;AACH;AACD,uBAAO;AACHN,2BAAQO,SADL;AAEHN,yBAAQA,GAFL;AAGHC,2BAAQA;AAHL,iBAAP;AAKH;AAdoB,SAAjB,CAAR;;AAkBA;AACAL,YAAIC,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEA;AACAD,YAAIC,GAAJ,CAAQW,qBAAWC,IAAX,EAAR;AACAb,YAAIC,GAAJ,CAAQW,qBAAWE,UAAX,CAAsB,EAACC,UAAU,IAAX,EAAtB,CAAR;;AAGA;AACAf,YAAIC,GAAJ,CAAQe,mBAASC,UAAT,EAAR;AACAjB,YAAIC,GAAJ,CAAQe,mBAASE,OAAT,EAAR;AACAC,gBAAQ,kCAAR,EAA4CH,kBAA5C;;AAEJ;;AAIAhB,YAAIC,GAAJ,CAAQ,4BAAR;AACAmB,eAAOC,IAAP,GAAcA,cAAd;;AAEA;AACArB,YAAIC,GAAJ,CAAQqB,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,aAArB,CAAf,CAAR;;AAGA;AACA1B,cAAM2B,uBAAaC,UAAb,CAAwB5B,GAAxB,CAAN;;AAGA,eAAOA,GAAP;AACH;;AAxDU,C","file":"expressConfig.js","sourcesContent":["import express from 'express';\r\nimport RouterConfig from './routerConfig';\r\nimport path from 'path';\r\nimport cors from 'cors';\r\nimport util from 'util';\r\nimport morgan from 'morgan';\r\nimport Boom from 'express-boom';\r\nimport expressValidator from 'express-validator';\r\nimport bodyParser from 'body-parser';\r\nimport passport from 'passport';\r\n\r\n\r\nexport default {\r\n\r\n    configure: async (app) => {\r\n\r\n\r\n        /* =================== Middlewares ======================= */\r\n            app.use(cors());\r\n\r\n            // Express Validator Middleware\r\n            app.use(expressValidator({\r\n                errorFormatter: (param, msg, value) => {\r\n                    const namespace =param.split('.')\r\n                    , root = namespace.shift()\r\n                    , formParam = root;\r\n\r\n                    while(namespace.length) {\r\n                        formParam += '[' + namespace.shift() + ']';\r\n                    }\r\n                    return {\r\n                        param : formParam,\r\n                        msg   : msg,\r\n                        value : value\r\n                    };\r\n                }\r\n            }));\r\n\r\n\r\n            //Morgan\r\n            app.use(morgan('dev'));\r\n            \r\n            // Body Parser Middleware\r\n            app.use(bodyParser.json());\r\n            app.use(bodyParser.urlencoded({extended: true}));\r\n\r\n\r\n            // Passport Middleware\r\n            app.use(passport.initialize());\r\n            app.use(passport.session());\r\n            require('../middleware/passportVerifyUser')(passport);\r\n\r\n        /* =================== Middlewares Ends ======================= */\r\n\r\n\r\n\r\n        app.use(Boom());\r\n        global.util = util;\r\n\r\n        /* Set Static Folder */\r\n        app.use(express.static(path.join(__dirname, './../public')));\r\n        \r\n\r\n        //Router Config\r\n        app = RouterConfig.initRoutes(app);\r\n\r\n\r\n        return app;\r\n    }\r\n\r\n}"]}